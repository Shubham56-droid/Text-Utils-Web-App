{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaikw\\\\Text-Utils-Web-App\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Footer from \"./components/Footer\";\nimport Contact from \"./components/Contact\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const [selectedColor, setSelectedColor] = useState(\"#000000\"); // default color: black\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1400);\n  };\n\n  // New: function to change color\n  const handleColorChange = color => {\n    setSelectedColor(color);\n    showAlert(`Text color set to ${color}`, \"success\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbody\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Forge\",\n        aboutText: \"About Us\",\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Select Text Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleColorChange(\"#ff0000\"),\n          style: {\n            backgroundColor: \"#ff0000\",\n            color: \"#fff\",\n            marginRight: \"5px\"\n          },\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleColorChange(\"#0000ff\"),\n          style: {\n            backgroundColor: \"#0000ff\",\n            color: \"#fff\",\n            marginRight: \"5px\"\n          },\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleColorChange(\"#008000\"),\n          style: {\n            backgroundColor: \"#008000\",\n            color: \"#fff\"\n          },\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        heading1: \"Text For Analysis\",\n        heading2: \"Text Summary\",\n        heading3: \"Summary Preview\",\n        showAlert: showAlert,\n        selectedColor: selectedColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gJdVvqSQsPNBdiIMp9c7qSuYwxU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","TextForm","Footer","Contact","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","selectedColor","setSelectedColor","showAlert","message","type","msg","setTimeout","handleColorChange","color","children","id","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","marginRight","onClick","backgroundColor","heading1","heading2","heading3","_c","$RefreshReg$"],"sources":["C:/Users/gaikw/Text-Utils-Web-App/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Footer from \"./components/Footer\";\r\nimport Contact from \"./components/Contact\";\r\n\r\nfunction App() {\r\n  const [alert, setAlert] = useState(null);\r\n  const [selectedColor, setSelectedColor] = useState(\"#000000\"); // default color: black\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1400);\r\n  };\r\n\r\n  // New: function to change color\r\n  const handleColorChange = (color) => {\r\n    setSelectedColor(color);\r\n    showAlert(`Text color set to ${color}`, \"success\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"mainbody\">\r\n        <Navbar title=\"Text Forge\" aboutText=\"About Us\" showAlert={showAlert} />\r\n        <Alert alert={alert} />\r\n\r\n        {/* Color Picker Buttons */}\r\n        <div style={{ textAlign: \"center\", margin: \"10px\" }}>\r\n          <span style={{ marginRight: \"10px\" }}>Select Text Color:</span>\r\n          <button\r\n            onClick={() => handleColorChange(\"#ff0000\")}\r\n            style={{ backgroundColor: \"#ff0000\", color: \"#fff\", marginRight: \"5px\" }}\r\n          >\r\n            Red\r\n          </button>\r\n          <button\r\n            onClick={() => handleColorChange(\"#0000ff\")}\r\n            style={{ backgroundColor: \"#0000ff\", color: \"#fff\", marginRight: \"5px\" }}\r\n          >\r\n            Blue\r\n          </button>\r\n          <button\r\n            onClick={() => handleColorChange(\"#008000\")}\r\n            style={{ backgroundColor: \"#008000\", color: \"#fff\" }}\r\n          >\r\n            Green\r\n          </button>\r\n        </div>\r\n\r\n        {/* Pass selectedColor as a prop to TextForm */}\r\n        <TextForm\r\n          heading1=\"Text For Analysis\"\r\n          heading2=\"Text Summary\"\r\n          heading3=\"Summary Preview\"\r\n          showAlert={showAlert}\r\n          selectedColor={selectedColor}\r\n        />\r\n        {/* <About/>\r\n        <Contact/> */}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}